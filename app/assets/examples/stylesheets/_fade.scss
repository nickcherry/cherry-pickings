.fade-example {

  $blue: #27A5CE;

  $delay: .1s;
  $duration: .5s;
  $ease: ease-out;

  $button-radius: 50px;
  $button-border-thickness: 3px;

  $timer-radius: $button-radius;
  $timer-long-arm-length: $timer-radius * .88;
  $timer-short-arm-length: $timer-radius * .56;
  $timer-arm-width: 5px;
  $timer-border-thickness: $button-border-thickness;
  $timer-arm-border-radius: 5px;

  .loader {
    background: white;
    border: $timer-border-thickness solid $blue;
    border-radius: 50%;
    box-sizing: border-box;
    display: inline-block;
    height: $timer-radius * 2;
    left: 50%;
    margin-left: -$timer-radius;
    margin-top: -$timer-radius;
    overflow: hidden;
    position: absolute;
    text-indent: -9999px;
    top: 50%;
    width: $timer-radius * 2;
  }

  .loader::before {
    animation: timer-loader 1250ms infinite linear;
    background: $blue;
    border-radius: $timer-arm-border-radius;
    content: '';
    display: block;
    height: $timer-long-arm-length;
    left: $timer-radius - $timer-arm-width;
    position: absolute;
    top: $timer-radius - $timer-arm-width;
    transform-origin: ($timer-arm-width / 2) ($timer-arm-width / 2);
    width: $timer-arm-width;
  }

  .loader::after {
    animation: timer-loader 15000ms infinite linear;
    background: $blue;
    border-radius: $timer-arm-border-radius;
    content: '';
    display: block;
    height: $timer-short-arm-length;
    left: $timer-radius - $timer-arm-width;
    position: absolute;
    top: $timer-radius - $timer-arm-width;
    transform-origin: ($timer-arm-width / 2) ($timer-arm-width / 2);
    width: $timer-arm-width;
  }

  button {

    background: white;
    background-image: linear-gradient(to bottom, rgba($blue, .02), rgba($blue, .08));
    border: $button-border-thickness solid $blue;
    border-radius: 50%;
    box-shadow: 1px 1px 4px rgba(black, .25), inset 0 0 ($button-radius * .2) rgba(black, .05);
    color: $blue;
    cursor: pointer;
    display: block;
    font-family: $default-font-family;
    font-size: 1em;
    font-weight: $thin-font-weight;
    height: $button-radius * 2;
    left: 50%;
    line-height: 1;
    margin-left: -$button-radius;
    margin-top: -$button-radius;
    outline: none;
    padding: 0;
    position: absolute;
    text-shadow: 1px 1px rgba(white, .1);
    transition: transform .15s ease-out;
    top: 50%;
    user-select: none;
    width: $button-radius * 2;
    &:hover {
      background-image: linear-gradient(to bottom, rgba($blue, .08), rgba($blue, .14));
      transform: scale(1.06);
    }
    &:active {
      transform: scale(1.08);
    }
  }

  .doughboy {

    $doughboy-width: 200px;
    $doughboy-height: 330px;

    display: none;
    left: 50%;
    margin-left: -$doughboy-width / 2;
    margin-top: -$doughboy-height / 2;
    position: absolute;
    top: 50%;
    width: $doughboy-width;

    img {
      box-shadow: 0 0 12px rgba(black, .15);
      width: $doughboy-width;
    }

    .woohoo {
      color: $blue;
      font-size: 1em;
      font-weight: $light-font-weight;
      margin-top: .25em;
      text-align: center;
    }
  }

  .poked {
    .doughboy {
      display: block;
    }
    button {
      display: none;
    }
  }

  &#fade-1-example, &#fade-2-example {
    #wrapper {
      .content, .loader {
        transition: opacity $duration $ease $delay;
      }
      .content {
        opacity: 0;
      }
      &.initialized {
        .loader {
          opacity: 0;
        }
        .content {
          opacity: 1;
        }
      }
    }
  }

  &#fade-3-example {
    #wrapper {
      .content, .loader {
        transition: opacity $duration $ease $delay;
      }
      .content {
        visibility: hidden;
        opacity: 0;
      }
      &.initialized {
        .loader {
          visibility: hidden;
          opacity: 0;
        }
        .content {
          visibility: visible;
          opacity: 1;
        }
      }
    }
  }

  &#fade-4-example {
    #wrapper {
      .loader {
        opacity: 1; visibility: visible;
        transition: visibility 0s $ease $delay,
                    opacity $duration $ease $delay;
      }
      .content {
        opacity: 0; visibility: hidden;
        transition: visibility 0s $ease ($delay + $duration),
                    opacity $duration $ease $delay;
      }
      &.initialized {
        .loader {
          opacity: 0; visibility: hidden;
          transition-delay: ($delay + $duration), $delay;
        }
        .content {
          opacity: 1;
          transition-delay: 0s;
          visibility: visible;
        }
      }
    }
  }

}

@keyframes timer-loader {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
